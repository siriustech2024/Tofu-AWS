name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Tofu/docker/Dockerfile'
      - 'Tofu/IaC/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Tofu/docker/Dockerfile'
      - 'Tofu/IaC/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}/tofu

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Tofu/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag as latest on main branch
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  tofu-plan:
    name: Tofu Plan
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.6.0"

      - name: Configure Tofu Backend
        run: |
          cd Tofu/IaC
          tofu init -reconfigure \
            -backend-config="address=https://api.github.com/repos/${{ github.repository }}/state/default" \
            -backend-config="lock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="unlock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="username=${{ github.actor }}" \
            -backend-config="password=${{ secrets.GITHUB_TOKEN }}" \
            -backend-config="lock_method=POST" \
            -backend-config="unlock_method=DELETE" \
            -backend-config="retry_wait_min=5"

      - name: Tofu Plan
        run: |
          cd Tofu/IaC
          tofu plan -out=tfplan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Tofu Plan
        uses: actions/upload-artifact@v4
        with:
          name: tofu-plan
          path: Tofu/IaC/tfplan

  tofu-apply:
    name: Tofu Apply
    runs-on: ubuntu-latest
    needs: [build, tofu-plan]
    environment: ${{ github.event.inputs.environment || 'staging' }}
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.6.0"

      - name: Configure Tofu Backend
        run: |
          cd Tofu/IaC
          tofu init -reconfigure \
            -backend-config="address=https://api.github.com/repos/${{ github.repository }}/state/default" \
            -backend-config="lock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="unlock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="username=${{ github.actor }}" \
            -backend-config="password=${{ secrets.GITHUB_TOKEN }}" \
            -backend-config="lock_method=POST" \
            -backend-config="unlock_method=DELETE" \
            -backend-config="retry_wait_min=5"

      - name: Download Tofu Plan
        uses: actions/download-artifact@v4
        with:
          name: tofu-plan
          path: Tofu/IaC/

      - name: Tofu Apply
        run: |
          cd Tofu/IaC
          tofu apply tfplan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tofu-destroy:
    name: Tofu Destroy
    runs-on: ubuntu-latest
    needs: build
    environment: production
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.6.0"

      - name: Configure Tofu Backend
        run: |
          cd Tofu/IaC
          tofu init -reconfigure \
            -backend-config="address=https://api.github.com/repos/${{ github.repository }}/state/default" \
            -backend-config="lock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="unlock_address=https://api.github.com/repos/${{ github.repository }}/state/default/lock" \
            -backend-config="username=${{ github.actor }}" \
            -backend-config="password=${{ secrets.GITHUB_TOKEN }}" \
            -backend-config="lock_method=POST" \
            -backend-config="unlock_method=DELETE" \
            -backend-config="retry_wait_min=5"

      - name: Tofu Destroy
        run: |
          cd Tofu/IaC
          tofu destroy --auto-approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 